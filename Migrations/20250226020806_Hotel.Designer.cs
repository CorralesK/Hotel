// <auto-generated />
using System;
using Hotel.src.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Hotel.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250226020806_Hotel")]
    partial class Hotel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hotel.src.Core.Entities.Reservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("ENDDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("STARTDATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("STATUS")
                        .HasColumnType("integer");

                    b.Property<double>("TOTALPRICE")
                        .HasColumnType("double precision");

                    b.Property<int>("USERID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("USERID");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Hotel.src.Core.Entities.ReservationRoom", b =>
                {
                    b.Property<int>("ReservationID")
                        .HasColumnType("integer");

                    b.Property<int>("RoomID")
                        .HasColumnType("integer");

                    b.HasKey("ReservationID", "RoomID");

                    b.HasIndex("RoomID");

                    b.ToTable("ReservationRooms");
                });

            modelBuilder.Entity("Hotel.src.Core.Entities.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("CAPACITY")
                        .HasColumnType("integer");

                    b.Property<double>("PRICEPERNIGHT")
                        .HasColumnType("double precision");

                    b.Property<string>("ROOMNUMBER")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("STATUS")
                        .HasColumnType("integer");

                    b.Property<int>("TYPE")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("ROOMNUMBER")
                        .IsUnique();

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Hotel.src.Core.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PASSWORD")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ROLE")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("EMAIL")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Hotel.src.Core.Entities.Reservation", b =>
                {
                    b.HasOne("Hotel.src.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("USERID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hotel.src.Core.Entities.ReservationRoom", b =>
                {
                    b.HasOne("Hotel.src.Core.Entities.Reservation", "Reservation")
                        .WithMany("ReservationRooms")
                        .HasForeignKey("ReservationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.src.Core.Entities.Room", "Room")
                        .WithMany("ReservationRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Hotel.src.Core.Entities.Reservation", b =>
                {
                    b.Navigation("ReservationRooms");
                });

            modelBuilder.Entity("Hotel.src.Core.Entities.Room", b =>
                {
                    b.Navigation("ReservationRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
